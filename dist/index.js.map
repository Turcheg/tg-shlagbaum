{"version":3,"sources":["../index.ts","../src/logger.ts","../src/config.ts","../src/utils.ts","../src/app.ts","../src/users.ts"],"sourcesContent":["import getLogger from './src/logger';\nimport config from './src/config';\nimport App from './src/app';\n\nconst logger = getLogger(config.logger);\nconst app = new App(config, logger);\n\n(async function () {\n  try {\n    await app.init();\n    logger.info('Init completed');\n    app.run();\n    logger.info('App is running');\n  } catch (e) {\n    logger.error('Exception occured on top thread', e);\n    process.exit(1);\n  }\n})();\n\nexport default {}","import pino from 'pino';\nfunction wrap(logger:any) {\n  const { error, child } = logger;\n  function errorRearranger(...args: any[]) {\n    if (typeof args[0] === 'string' && args.length > 1) {\n      for (let i = 1; i < args.length; i++) {\n        const arg: any = args[i];\n        if (arg instanceof Error) {\n          const [err] = args.splice(i, 1);\n          args.unshift(err);\n        }\n      }\n    }\n    // @ts-ignore\n    return error.apply(this, args);\n  }\n  // @ts-ignore\n  function childModifier(...args) {\n    // @ts-ignore\n    const c = child.apply(this, args);\n    c.error = errorRearranger;\n    c.child = childModifier;\n    return c;\n  }\n  logger.error = errorRearranger;\n  logger.child = childModifier;\n  return logger;\n}\n\n// @ts-ignore\nexport default function (opts):any {\n  return wrap(pino(opts));\n}\n","import { Config } from \"./types\";\n\nconst getenv = (key:string):string => {\n  let ret = process.env[key];\n  if(ret !== undefined) {\n    return ret;\n  }\n  return '';\n}\n\nconst config: Config = {\n  ewelink: {\n    email: getenv('EWELINK_EMAIL'),\n    password: getenv('EWELINK_PASSWORD'),\n    region: getenv('EWELINK_REGION'),\n    cmd_device_id: getenv('EWELINK_CMD_DEVICE_ID'),\n    cmd_open_ch: Number(getenv('EWELINK_CMD_OPEN_CH')),\n    cmd_close_ch: Number(getenv('EWELINK_CMD_CLOSE_CH')),\n  },\n  tg: {\n    token: getenv('BOT_TOKEN'),\n    journal: Number(getenv('JOURNAL_TG_ID')),\n  },\n  users_db_file: getenv('USERS_DB_FILE'),\n  users: getenv('USERS'),\n  logger: {\n    level: getenv('LOG_LEVEL'),\n  },\n}\nexport default config;\n","import { Context } from \"telegraf\";\nimport { Update } from \"telegraf/typings/core/types/typegram\";\n\nexport const delay = (ms:number):Promise<void> => {\n  return new Promise((r) => {\n    setTimeout(r, ms);\n  });\n};\nexport const logctx = (ctx:Context): Update | null => {\n  if(ctx?.update) {\n    return {...ctx.update};\n  }\n  return null;\n}\nexport const seq = ():string => {\n  const timestamp = Math.floor( Number(new Date()) / 1000);\n  return String(Math.floor(timestamp * 1000))\n}","import { delay, logctx, seq } from \"./utils\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ewelink from \"ewelink-api\";\nimport { Context, Telegraf } from \"telegraf\";\nimport {\n  Config,\n  LoggerInterface,\n  UserPermission,\n  EwelinkSocketMessage,\n} from \"./types\";\nimport EventEmitter from \"events\";\nimport Users, {\n  PERMISSION_ADDUSERS,\n  PERMISSION_CLOSE,\n  PERMISSION_OPEN,\n  PERMISSION_SUPERADMIN,\n  PERMISSION_REPORT,\n} from \"./users\";\n\ninterface AppState {\n  inited: boolean;\n  gate: {\n    status: null;\n  };\n  ewelink: {\n    status:\n      | null\n      | \"transmitting\"\n      | \"available\"\n      | \"initing\"\n      | \"active\"\n      | \"error\"\n      | \"closed\";\n  };\n}\ninterface EwelinkCommandPayload {\n  action: string;\n  deviceid: string;\n  apikey?: string;\n  userAgent: string;\n  sequence?: string;\n  params: {\n    cmd: string;\n    rfChl: number;\n  };\n  selfApikey?: string;\n}\n\nexport default class App {\n  state: AppState;\n  config: Config;\n  l: LoggerInterface;\n  ewelink: ewelink;\n  ewelink_ws: any;\n  bot: Telegraf;\n  users: Users;\n  _socket: EventEmitter;\n  journal_tg_id: number;\n\n  constructor(config: Config, logger: LoggerInterface) {\n    this.config = config;\n    this.l = logger;\n    this._socket = new EventEmitter();\n    this.users = new Users(\n      this.config.users_db_file,\n      logger.child({ class: \"Users\" })\n    );\n    this.journal_tg_id = this.config.tg.journal;\n\n    this.state = {\n      inited: false,\n      gate: {\n        status: null,\n      },\n      ewelink: {\n        status: null,\n      },\n    };\n    const { email, password, region } = this.config.ewelink;\n    this.ewelink = new ewelink({\n      email,\n      password,\n      // @ts-ignore\n      region,\n    });\n    this.bot = new Telegraf(this.config.tg.token);\n  }\n\n  async run() {\n    await this.bot.launch();\n    return;\n  }\n\n  async init() {\n    await Promise.all([this.initEwelink(), this.initBot()]);\n    process.once(\"SIGINT\", () => {\n      this.bot.stop(\"SIGINT\");\n      if (this.ewelink_ws) {\n        this.ewelink_ws.close();\n      }\n      this;\n    });\n    process.once(\"SIGTERM\", () => {\n      this.bot.stop(\"SIGTERM\");\n      if (this.ewelink_ws) {\n        this.ewelink_ws.close();\n      }\n    });\n\n    this.state.inited = true;\n    return;\n  }\n\n  async initBot() {\n    this.bot.start((ctx) => {\n      this.l.trace({\n        msg: \"Incoming /start command\",\n      });\n      return ctx.replyWithHTML(\n        `ЗДРАСТВУЙТЕ!\\n` +\n          `АССАЛОМУ АЛАЙКУМ!\\n---\\n` +\n          `/open - открыть шлагбаум/шлагбумни очиш\\n` +\n          `/close - закрыть шлагбаум/шлагбумни ёпиш\\n` +\n          `/myid - узнать персональный номер/шахсий номеризни билиш\\n` +\n          `<b>ВАЖНО!!! Перед закрытием визуально убедитесь, что нет помех.< /b>`\n      );\n    });\n    this.bot.command(\"help\", (ctx) => {\n      this.l.trace({\n        msg: \"Incoming /help command\",\n        ctx: logctx(ctx),\n      });\n      ctx.replyWithHTML(\n        `Этот бот нужен для открытия и закрытия шлагбаума\\n` +\n          `/open - открыть шлагбаум/шлагбумни очиш\\n` +\n          `/close - закрыть шлагбаум/шлагбумни ёпиш\\n` +\n          `/myid - узнать персональный номер/шахсий номеризни билиш\\n` +\n          `<b>ВАЖНО!!! Перед закрытием визуально убедитесь, что нет помех.</b>`\n      );\n    });\n    this.bot.command(\"myid\", (ctx) => {\n      this.l.trace({\n        msg: \"Incoming /myid command\",\n        ctx: logctx(ctx),\n      });\n      ctx.replyWithHTML(`Ваш номер: <b>${ctx.message.from.id}</b>`);\n    });\n    this.bot.command(\"open\", async (ctx) => {\n      this.l.trace({\n        msg: \"Incoming /open command\",\n        ctx: logctx(ctx),\n      });\n      if (!this.isAuthorized(ctx.message.from.id, PERMISSION_OPEN)) {\n        return ctx.replyWithHTML(\n          `У вас нет доступа :( (<i>${ctx.message.from.id}</i>)`\n        );\n      }\n      this.openGate(ctx);\n    });\n    this.bot.command(\"close\", async (ctx) => {\n      this.l.trace({\n        msg: \"Incoming /close command\",\n        ctx: logctx(ctx),\n      });\n      if (!this.isAuthorized(ctx.message.from.id, PERMISSION_CLOSE)) {\n        return ctx.replyWithHTML(\n          `У вас нет доступа :( (<i>${ctx.message.from.id}</i>)`\n        );\n      }\n      this.closeGate(ctx);\n    });\n  }\n\n  /**\n   * Запись в журнал важных событий\n   *\n   * @param type string - Открытие, закрытие\n   * @param ctx Context - контекст телеграм соощения\n   */\n  journal(type: string, ctx: Context, result: boolean): boolean {\n    if (this.journal_tg_id && ctx.message?.from?.id) {\n      let user_id = ctx.message.from.id;\n      let user = this.users.getUser(user_id);\n      let send = (m: string) =>\n        ctx.telegram.sendMessage(this.journal_tg_id, m, {\n          parse_mode: \"HTML\",\n        });\n      if (!user) {\n        send(\n          `Неизвестный пользователь пытается выполнить: <b>${type}</b>\\n` +\n            `<pre>${JSON.stringify(logctx(ctx), null, 2)}</pre>`\n        );\n        return true;\n      }\n      send(\n        `Пользователь <a href=\"tg://user?id=${user.tg_id}\">${user.name}</a> из <b>${user.address}</b> выполнил действие:\\n` +\n          `<b><u>${type}</u></b> - ${result ? '<i>успешно</i>' : '<b>ОШИБКА</b>'}`\n      );\n      return true;\n    }\n    return false;\n  }\n\n  async openGate(ctx: Context) {\n    this.l.trace({\n      msg: \"open Gate initiated\",\n      ctx: logctx(ctx),\n    });\n    const socketPromise = this.getSocket();\n    // @ts-ignore\n    const payload: EwelinkCommandPayload = {\n      action: \"update\",\n      deviceid: this.config.ewelink.cmd_device_id,\n      userAgent: \"app\",\n      params: {\n        cmd: \"transmit\",\n        rfChl: this.config.ewelink.cmd_open_ch,\n      },\n    };\n    const result = await this.ewelinkCommand(ctx, payload);\n    if (result) {\n      this.journal(\"Закрыть\", ctx);\n    }\n  }\n\n  async closeGate(ctx: Context) {\n    this.l.trace({\n      msg: \"close Gate initiated\",\n      ctx: logctx(ctx),\n    });\n\n    const payload: EwelinkCommandPayload = {\n      action: \"update\",\n      deviceid: this.config.ewelink.cmd_device_id,\n      userAgent: \"app\",\n      params: {\n        cmd: \"transmit\",\n        rfChl: this.config.ewelink.cmd_close_ch,\n      },\n    };\n    const result = await this.ewelinkCommand(ctx, payload);\n    this.journal(\"Закрыть\", ctx, result);\n  }\n\n  async ewelinkCommand(\n    ctx: Context,\n    payload: EwelinkCommandPayload\n  ): Promise<boolean> {\n    const l = this.l.child({\n      job_id: uuidv4(),\n    });\n    l.info({\n      msg: \"Ewelink command initiated\",\n      ctx: logctx(ctx),\n      payload,\n    });\n\n    if (this.state.ewelink.status === \"transmitting\") {\n      ctx.reply(\"Сейчас шлагбаум занят, повторите позже\");\n      return false;\n    }\n    this.state.ewelink.status = \"transmitting\";\n    ctx.replyWithChatAction(\"typing\");\n    try {\n      l.info({\n        msg: \"Sending to device\",\n        payload,\n      });\n\n      await this.wsSend(payload);\n      ctx.reply(\"Команда отправлена\");\n      return true;\n    } catch (e) {\n      ctx.reply(\"Нет связи со шлагбаумом\");\n      return false;\n    } finally {\n      this.state.ewelink.status = \"available\";\n    }\n  }\n\n  async wsSend(\n    payload: EwelinkCommandPayload,\n    timeout_ms: number = 5000\n  ): Promise<true> {\n    let ws = await this.getSocket();\n    let sequence = seq();\n    // @ts-ignore\n    payload.apikey = this.ewelink.apiKey;\n    payload.selfApikey = payload.apikey;\n    payload.sequence = sequence;\n\n    const response: Promise<true> = new Promise((res, rej) => {\n      this._socket.once(`seq:${sequence}`, (message: EwelinkSocketMessage) => {\n        if (message?.error === 0) {\n          res(true);\n        }\n        rej({\n          code: message?.error ?? -1,\n          message: `${message?.reason ?? \"Unknown ewelink command error\"}`,\n        });\n      });\n    });\n    await ws.send(JSON.stringify(payload));\n    const timeout: Promise<true> = new Promise((res, rej) => {\n      setTimeout(() => {\n        rej({\n          code: -2,\n          message: `${timeout_ms} Timeout`,\n        });\n      }, timeout_ms);\n    });\n    return Promise.race([response, timeout]);\n  }\n\n  isAuthorized(tg_id: number, permission: UserPermission): boolean {\n    if (this.users.userCan(tg_id, PERMISSION_SUPERADMIN)) {\n      return true;\n    }\n    return this.users.userCan(tg_id, permission);\n  }\n\n  async initEwelink() {\n    let i = 0;\n    while (this.state.ewelink.status === \"initing\") {\n      await delay(100);\n      if (++i > 20) {\n        throw new Error(\"Unable to connect ewelink\");\n      }\n    }\n    if (this.state.ewelink.status === \"active\") {\n      return;\n    }\n    this.state.ewelink.status = \"initing\";\n    /* get all devices */\n    await this.ewelink.getDevices();\n    if (!this.ewelink_ws) {\n      this.ewelink_ws = await this.ewelink.openWebSocket(\n        this.ewelinkWsCallback.bind(this)\n      );\n      this.ewelink_ws.onError.addListener(() => {\n        this.state.ewelink.status = \"error\";\n      });\n      this.ewelink_ws.onClose.addListener(() => {\n        this.state.ewelink.status = \"closed\";\n      });\n    }\n    this.state.ewelink.status = \"active\";\n    return;\n  }\n\n  async getSocket() {\n    if (this.state.ewelink.status !== \"active\") {\n      await this.initEwelink();\n    }\n    if (this.state.ewelink.status === \"active\") {\n      return this.ewelink_ws;\n    }\n    throw new Error(\"Unable to get socket\");\n  }\n\n  ewelinkWsCallback(message: string | EwelinkSocketMessage) {\n    if (typeof message === \"string\") {\n      this.l.info({\n        msg: \"ws:in\",\n        str: message,\n      });\n      this._socket.emit(\"message\", message);\n    } else {\n      this.l.info({\n        msg: \"ws:in\",\n        ...message,\n      });\n      if (message?.sequence) {\n        this._socket.emit(`seq:${message.sequence}`, message);\n      }\n      if (message?.error && message?.error > 0) {\n        this._socket.emit(`err`, message);\n      }\n      if (message?.action) {\n        this._socket.emit(`action:${message.action}`, message);\n      }\n    }\n    return;\n  }\n}\n","import fs from 'fs';\n\nimport { UserPermission, UserPermissionName, User, UserDbElements } from './types';\n\nexport const PERMISSION_OPEN: UserPermission = 1;\nexport const PERMISSION_CLOSE: UserPermission = 2;\nexport const PERMISSION_ADDUSERS: UserPermission = 4;\nexport const PERMISSION_REPORT: UserPermission = 8;\nexport const PERMISSION_SUPERADMIN: UserPermission = -1;\n\nconst permissions: UserPermissionName[] = [\n  [PERMISSION_OPEN, 'Открывать шлагбаум'],\n  [PERMISSION_CLOSE, 'Закрывать шлагбаум'],\n  [PERMISSION_ADDUSERS, 'Добавлять пользователей шлагбаум'],\n  [PERMISSION_REPORT, 'Получать отчеты'],\n  [PERMISSION_SUPERADMIN, 'Суперадмин'],\n];\n\nexport default class Users {\n  l: any;\n  filename: string;\n  db: Map<number, User>;\n  constructor(filename: string, logger: any) {\n    this.filename = filename;\n    this.l = logger;\n    this.db = new Map();\n    try {\n      this.loadFromFile();\n    } catch (e) {\n      this.l.error('Error in Users.constructor', e);\n      throw e;\n    }\n  }\n\n  loadFromFile(): void {\n    this.l.trace({\n      msg: \"Trying to load file\",\n      filename: this.filename\n    })\n    const json = fs.readFileSync(this.filename, {\n      encoding: 'utf-8',\n    });\n    const cont: UserDbElements = JSON.parse(json);\n    if (!Array.isArray(cont)) {\n      throw new Error('Parsed JSON string is not array');\n    }\n    this.db.clear();\n    for (let i = 0, to = cont.length; i < to; i++) {\n      const [tg_id, name, address, permissions] = cont[i];\n      this.db.set(tg_id, { tg_id, name, address, permissions });\n    }\n    return;\n  }\n\n  saveToFile(pretty: boolean = true): void {\n    let arr: UserDbElements = [];\n    this.db.forEach((v) => {\n      arr.push([v.tg_id, v.name, v.address, v.permissions]);\n    });\n    let cont: string = '';\n    if (pretty) {\n      cont = JSON.stringify(arr, null, '  ');\n    } else {\n      cont = JSON.stringify(arr);\n    }\n    fs.writeFileSync(this.filename, cont);\n    return;\n  }\n\n  getAllPermissions(): UserPermissionName[] {\n    return permissions;\n  }\n\n  getUserPermissions(tg_id: number): UserPermissionName[] {\n    const user = this.db.get(tg_id);\n    if (!user) {\n      return [];\n    }\n    let user_permissions = user.permissions;\n    return this.getAllPermissions().filter((per) => {\n      let [permission] = per;\n      return this.permissionsCan(user_permissions, permission);\n    });\n  }\n  getUserPermissionsText(tg_id: number): string[] {\n    return this.getUserPermissions(tg_id).map((v) => v[1]);\n  }\n\n  permValid(permission: UserPermission): boolean {\n    return permissions.map((v) => v[0]).includes(permission);\n  }\n\n  permissionsCan(permissions: number, permission: UserPermission): boolean {\n    if (permissions === PERMISSION_SUPERADMIN) {\n      return true;\n    }\n    if (!this.permValid(permission)) {\n      throw new Error('Permission is not valid');\n    }\n    return (permissions & permission) > 0;\n  }\n\n  userCan(tg_id: number, permission: UserPermission): boolean {\n    const user = this.db.get(tg_id);\n    if (!user) return false;\n    const permissions = user.permissions;\n    return this.permissionsCan(permissions, permission);\n  }\n\n  addUser(\n    tg_id: number,\n    name: string,\n    address: string,\n    permissions: number\n  ): void {\n    this.db.set(tg_id, { tg_id, name, address, permissions });\n  }\n\n  removeUser(tg_id: number): void {\n    this.db.delete(tg_id);\n  }\n\n  getUser(tg_id: number): User | undefined {\n    return this.db.get(tg_id)\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,kBAAiB;AACjB,SAAS,KAAKA,SAAY;AACxB,QAAM,EAAE,OAAO,MAAM,IAAIA;AACzB,WAAS,mBAAmB,MAAa;AACvC,QAAI,OAAO,KAAK,OAAO,YAAY,KAAK,SAAS,GAAG;AAClD,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,cAAM,MAAW,KAAK;AACtB,YAAI,eAAe,OAAO;AACxB,gBAAM,CAAC,GAAG,IAAI,KAAK,OAAO,GAAG,CAAC;AAC9B,eAAK,QAAQ,GAAG;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAEA,WAAO,MAAM,MAAM,MAAM,IAAI;AAAA,EAC/B;AAEA,WAAS,iBAAiB,MAAM;AAE9B,UAAM,IAAI,MAAM,MAAM,MAAM,IAAI;AAChC,MAAE,QAAQ;AACV,MAAE,QAAQ;AACV,WAAO;AAAA,EACT;AACA,EAAAA,QAAO,QAAQ;AACf,EAAAA,QAAO,QAAQ;AACf,SAAOA;AACT;AAGe,SAAR,eAAkB,MAAU;AACjC,SAAO,SAAK,YAAAC,SAAK,IAAI,CAAC;AACxB;;;AC9BA,IAAM,SAAS,CAAC,QAAsB;AACpC,MAAI,MAAM,QAAQ,IAAI;AACtB,MAAG,QAAQ,QAAW;AACpB,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAEA,IAAM,SAAiB;AAAA,EACrB,SAAS;AAAA,IACP,OAAO,OAAO,eAAe;AAAA,IAC7B,UAAU,OAAO,kBAAkB;AAAA,IACnC,QAAQ,OAAO,gBAAgB;AAAA,IAC/B,eAAe,OAAO,uBAAuB;AAAA,IAC7C,aAAa,OAAO,OAAO,qBAAqB,CAAC;AAAA,IACjD,cAAc,OAAO,OAAO,sBAAsB,CAAC;AAAA,EACrD;AAAA,EACA,IAAI;AAAA,IACF,OAAO,OAAO,WAAW;AAAA,IACzB,SAAS,OAAO,OAAO,eAAe,CAAC;AAAA,EACzC;AAAA,EACA,eAAe,OAAO,eAAe;AAAA,EACrC,OAAO,OAAO,OAAO;AAAA,EACrB,QAAQ;AAAA,IACN,OAAO,OAAO,WAAW;AAAA,EAC3B;AACF;AACA,IAAO,iBAAQ;;;AC1BR,IAAM,QAAQ,CAAC,OAA4B;AAChD,SAAO,IAAI,QAAQ,CAAC,MAAM;AACxB,eAAW,GAAG,EAAE;AAAA,EAClB,CAAC;AACH;AACO,IAAM,SAAS,CAAC,QAA+B;AACpD,MAAG,2BAAK,QAAQ;AACd,WAAO,EAAC,GAAG,IAAI,OAAM;AAAA,EACvB;AACA,SAAO;AACT;AACO,IAAM,MAAM,MAAa;AAC9B,QAAM,YAAY,KAAK,MAAO,OAAO,IAAI,KAAK,CAAC,IAAI,GAAI;AACvD,SAAO,OAAO,KAAK,MAAM,YAAY,GAAI,CAAC;AAC5C;;;AChBA,kBAA6B;AAC7B,yBAAoB;AACpB,sBAAkC;AAOlC,oBAAyB;;;ACVzB,gBAAe;AAIR,IAAM,kBAAkC;AACxC,IAAM,mBAAmC;AACzC,IAAM,sBAAsC;AAC5C,IAAM,oBAAoC;AAC1C,IAAM,wBAAwC;AAErD,IAAM,cAAoC;AAAA,EACxC,CAAC,iBAAiB,yGAAoB;AAAA,EACtC,CAAC,kBAAkB,yGAAoB;AAAA,EACvC,CAAC,qBAAqB,wLAAkC;AAAA,EACxD,CAAC,mBAAmB,uFAAiB;AAAA,EACrC,CAAC,uBAAuB,8DAAY;AACtC;AAEA,IAAqB,QAArB,MAA2B;AAAA,EAIzB,YAAY,UAAkBC,SAAa;AACzC,SAAK,WAAW;AAChB,SAAK,IAAIA;AACT,SAAK,KAAK,oBAAI,IAAI;AAClB,QAAI;AACF,WAAK,aAAa;AAAA,IACpB,SAAS,GAAP;AACA,WAAK,EAAE,MAAM,8BAA8B,CAAC;AAC5C,YAAM;AAAA,IACR;AAAA,EACF;AAAA,EAEA,eAAqB;AACnB,SAAK,EAAE,MAAM;AAAA,MACX,KAAK;AAAA,MACL,UAAU,KAAK;AAAA,IACjB,CAAC;AACD,UAAM,OAAO,UAAAC,QAAG,aAAa,KAAK,UAAU;AAAA,MAC1C,UAAU;AAAA,IACZ,CAAC;AACD,UAAM,OAAuB,KAAK,MAAM,IAAI;AAC5C,QAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,YAAM,IAAI,MAAM,iCAAiC;AAAA,IACnD;AACA,SAAK,GAAG,MAAM;AACd,aAAS,IAAI,GAAG,KAAK,KAAK,QAAQ,IAAI,IAAI,KAAK;AAC7C,YAAM,CAAC,OAAO,MAAM,SAASC,YAAW,IAAI,KAAK;AACjD,WAAK,GAAG,IAAI,OAAO,EAAE,OAAO,MAAM,SAAS,aAAAA,aAAY,CAAC;AAAA,IAC1D;AACA;AAAA,EACF;AAAA,EAEA,WAAW,SAAkB,MAAY;AACvC,QAAI,MAAsB,CAAC;AAC3B,SAAK,GAAG,QAAQ,CAAC,MAAM;AACrB,UAAI,KAAK,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,CAAC;AAAA,IACtD,CAAC;AACD,QAAI,OAAe;AACnB,QAAI,QAAQ;AACV,aAAO,KAAK,UAAU,KAAK,MAAM,IAAI;AAAA,IACvC,OAAO;AACL,aAAO,KAAK,UAAU,GAAG;AAAA,IAC3B;AACA,cAAAD,QAAG,cAAc,KAAK,UAAU,IAAI;AACpC;AAAA,EACF;AAAA,EAEA,oBAA0C;AACxC,WAAO;AAAA,EACT;AAAA,EAEA,mBAAmB,OAAqC;AACtD,UAAM,OAAO,KAAK,GAAG,IAAI,KAAK;AAC9B,QAAI,CAAC,MAAM;AACT,aAAO,CAAC;AAAA,IACV;AACA,QAAI,mBAAmB,KAAK;AAC5B,WAAO,KAAK,kBAAkB,EAAE,OAAO,CAAC,QAAQ;AAC9C,UAAI,CAAC,UAAU,IAAI;AACnB,aAAO,KAAK,eAAe,kBAAkB,UAAU;AAAA,IACzD,CAAC;AAAA,EACH;AAAA,EACA,uBAAuB,OAAyB;AAC9C,WAAO,KAAK,mBAAmB,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE;AAAA,EACvD;AAAA,EAEA,UAAU,YAAqC;AAC7C,WAAO,YAAY,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,SAAS,UAAU;AAAA,EACzD;AAAA,EAEA,eAAeC,cAAqB,YAAqC;AACvE,QAAIA,iBAAgB,uBAAuB;AACzC,aAAO;AAAA,IACT;AACA,QAAI,CAAC,KAAK,UAAU,UAAU,GAAG;AAC/B,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AACA,YAAQA,eAAc,cAAc;AAAA,EACtC;AAAA,EAEA,QAAQ,OAAe,YAAqC;AAC1D,UAAM,OAAO,KAAK,GAAG,IAAI,KAAK;AAC9B,QAAI,CAAC;AAAM,aAAO;AAClB,UAAMA,eAAc,KAAK;AACzB,WAAO,KAAK,eAAeA,cAAa,UAAU;AAAA,EACpD;AAAA,EAEA,QACE,OACA,MACA,SACAA,cACM;AACN,SAAK,GAAG,IAAI,OAAO,EAAE,OAAO,MAAM,SAAS,aAAAA,aAAY,CAAC;AAAA,EAC1D;AAAA,EAEA,WAAW,OAAqB;AAC9B,SAAK,GAAG,OAAO,KAAK;AAAA,EACtB;AAAA,EAEA,QAAQ,OAAiC;AACvC,WAAO,KAAK,GAAG,IAAI,KAAK;AAAA,EAC1B;AACF;;;AD7EA,IAAqB,MAArB,MAAyB;AAAA,EAWvB,YAAYC,SAAgBC,SAAyB;AACnD,SAAK,SAASD;AACd,SAAK,IAAIC;AACT,SAAK,UAAU,IAAI,cAAAC,QAAa;AAChC,SAAK,QAAQ,IAAI;AAAA,MACf,KAAK,OAAO;AAAA,MACZD,QAAO,MAAM,EAAE,OAAO,QAAQ,CAAC;AAAA,IACjC;AACA,SAAK,gBAAgB,KAAK,OAAO,GAAG;AAEpC,SAAK,QAAQ;AAAA,MACX,QAAQ;AAAA,MACR,MAAM;AAAA,QACJ,QAAQ;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACP,QAAQ;AAAA,MACV;AAAA,IACF;AACA,UAAM,EAAE,OAAO,UAAU,OAAO,IAAI,KAAK,OAAO;AAChD,SAAK,UAAU,IAAI,mBAAAE,QAAQ;AAAA,MACzB;AAAA,MACA;AAAA,MAEA;AAAA,IACF,CAAC;AACD,SAAK,MAAM,IAAI,yBAAS,KAAK,OAAO,GAAG,KAAK;AAAA,EAC9C;AAAA,EAEA,MAAM,MAAM;AACV,UAAM,KAAK,IAAI,OAAO;AACtB;AAAA,EACF;AAAA,EAEA,MAAM,OAAO;AACX,UAAM,QAAQ,IAAI,CAAC,KAAK,YAAY,GAAG,KAAK,QAAQ,CAAC,CAAC;AACtD,YAAQ,KAAK,UAAU,MAAM;AAC3B,WAAK,IAAI,KAAK,QAAQ;AACtB,UAAI,KAAK,YAAY;AACnB,aAAK,WAAW,MAAM;AAAA,MACxB;AACA;AAAA,IACF,CAAC;AACD,YAAQ,KAAK,WAAW,MAAM;AAC5B,WAAK,IAAI,KAAK,SAAS;AACvB,UAAI,KAAK,YAAY;AACnB,aAAK,WAAW,MAAM;AAAA,MACxB;AAAA,IACF,CAAC;AAED,SAAK,MAAM,SAAS;AACpB;AAAA,EACF;AAAA,EAEA,MAAM,UAAU;AACd,SAAK,IAAI,MAAM,CAAC,QAAQ;AACtB,WAAK,EAAE,MAAM;AAAA,QACX,KAAK;AAAA,MACP,CAAC;AACD,aAAO,IAAI;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMF;AAAA,IACF,CAAC;AACD,SAAK,IAAI,QAAQ,QAAQ,CAAC,QAAQ;AAChC,WAAK,EAAE,MAAM;AAAA,QACX,KAAK;AAAA,QACL,KAAK,OAAO,GAAG;AAAA,MACjB,CAAC;AACD,UAAI;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAKF;AAAA,IACF,CAAC;AACD,SAAK,IAAI,QAAQ,QAAQ,CAAC,QAAQ;AAChC,WAAK,EAAE,MAAM;AAAA,QACX,KAAK;AAAA,QACL,KAAK,OAAO,GAAG;AAAA,MACjB,CAAC;AACD,UAAI,cAAc,yDAAiB,IAAI,QAAQ,KAAK,QAAQ;AAAA,IAC9D,CAAC;AACD,SAAK,IAAI,QAAQ,QAAQ,OAAO,QAAQ;AACtC,WAAK,EAAE,MAAM;AAAA,QACX,KAAK;AAAA,QACL,KAAK,OAAO,GAAG;AAAA,MACjB,CAAC;AACD,UAAI,CAAC,KAAK,aAAa,IAAI,QAAQ,KAAK,IAAI,eAAe,GAAG;AAC5D,eAAO,IAAI;AAAA,UACT,kGAA4B,IAAI,QAAQ,KAAK;AAAA,QAC/C;AAAA,MACF;AACA,WAAK,SAAS,GAAG;AAAA,IACnB,CAAC;AACD,SAAK,IAAI,QAAQ,SAAS,OAAO,QAAQ;AACvC,WAAK,EAAE,MAAM;AAAA,QACX,KAAK;AAAA,QACL,KAAK,OAAO,GAAG;AAAA,MACjB,CAAC;AACD,UAAI,CAAC,KAAK,aAAa,IAAI,QAAQ,KAAK,IAAI,gBAAgB,GAAG;AAC7D,eAAO,IAAI;AAAA,UACT,kGAA4B,IAAI,QAAQ,KAAK;AAAA,QAC/C;AAAA,MACF;AACA,WAAK,UAAU,GAAG;AAAA,IACpB,CAAC;AAAA,EACH;AAAA,EAQA,QAAQ,MAAc,KAAc,QAA0B;AAnLhE;AAoLI,QAAI,KAAK,mBAAiB,eAAI,YAAJ,mBAAa,SAAb,mBAAmB,KAAI;AAC/C,UAAI,UAAU,IAAI,QAAQ,KAAK;AAC/B,UAAI,OAAO,KAAK,MAAM,QAAQ,OAAO;AACrC,UAAI,OAAO,CAAC,MACV,IAAI,SAAS,YAAY,KAAK,eAAe,GAAG;AAAA,QAC9C,YAAY;AAAA,MACd,CAAC;AACH,UAAI,CAAC,MAAM;AACT;AAAA,UACE,2PAAmD;AAAA,OACzC,KAAK,UAAU,OAAO,GAAG,GAAG,MAAM,CAAC;AAAA,QAC/C;AACA,eAAO;AAAA,MACT;AACA;AAAA,QACE,kGAAsC,KAAK,UAAU,KAAK,4BAAkB,KAAK;AAAA,QACtE,kBAAkB,SAAS,sDAAmB;AAAA,MAC3D;AACA,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AAAA,EAEA,MAAM,SAAS,KAAc;AAC3B,SAAK,EAAE,MAAM;AAAA,MACX,KAAK;AAAA,MACL,KAAK,OAAO,GAAG;AAAA,IACjB,CAAC;AACD,UAAM,gBAAgB,KAAK,UAAU;AAErC,UAAM,UAAiC;AAAA,MACrC,QAAQ;AAAA,MACR,UAAU,KAAK,OAAO,QAAQ;AAAA,MAC9B,WAAW;AAAA,MACX,QAAQ;AAAA,QACN,KAAK;AAAA,QACL,OAAO,KAAK,OAAO,QAAQ;AAAA,MAC7B;AAAA,IACF;AACA,UAAM,SAAS,MAAM,KAAK,eAAe,KAAK,OAAO;AACrD,QAAI,QAAQ;AACV,WAAK,QAAQ,8CAAW,GAAG;AAAA,IAC7B;AAAA,EACF;AAAA,EAEA,MAAM,UAAU,KAAc;AAC5B,SAAK,EAAE,MAAM;AAAA,MACX,KAAK;AAAA,MACL,KAAK,OAAO,GAAG;AAAA,IACjB,CAAC;AAED,UAAM,UAAiC;AAAA,MACrC,QAAQ;AAAA,MACR,UAAU,KAAK,OAAO,QAAQ;AAAA,MAC9B,WAAW;AAAA,MACX,QAAQ;AAAA,QACN,KAAK;AAAA,QACL,OAAO,KAAK,OAAO,QAAQ;AAAA,MAC7B;AAAA,IACF;AACA,UAAM,SAAS,MAAM,KAAK,eAAe,KAAK,OAAO;AACrD,SAAK,QAAQ,8CAAW,KAAK,MAAM;AAAA,EACrC;AAAA,EAEA,MAAM,eACJ,KACA,SACkB;AAClB,UAAM,IAAI,KAAK,EAAE,MAAM;AAAA,MACrB,YAAQ,YAAAC,IAAO;AAAA,IACjB,CAAC;AACD,MAAE,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK,OAAO,GAAG;AAAA,MACf;AAAA,IACF,CAAC;AAED,QAAI,KAAK,MAAM,QAAQ,WAAW,gBAAgB;AAChD,UAAI,MAAM,6MAAwC;AAClD,aAAO;AAAA,IACT;AACA,SAAK,MAAM,QAAQ,SAAS;AAC5B,QAAI,oBAAoB,QAAQ;AAChC,QAAI;AACF,QAAE,KAAK;AAAA,QACL,KAAK;AAAA,QACL;AAAA,MACF,CAAC;AAED,YAAM,KAAK,OAAO,OAAO;AACzB,UAAI,MAAM,yGAAoB;AAC9B,aAAO;AAAA,IACT,SAAS,GAAP;AACA,UAAI,MAAM,6HAAyB;AACnC,aAAO;AAAA,IACT,UAAE;AACA,WAAK,MAAM,QAAQ,SAAS;AAAA,IAC9B;AAAA,EACF;AAAA,EAEA,MAAM,OACJ,SACA,aAAqB,KACN;AACf,QAAI,KAAK,MAAM,KAAK,UAAU;AAC9B,QAAI,WAAW,IAAI;AAEnB,YAAQ,SAAS,KAAK,QAAQ;AAC9B,YAAQ,aAAa,QAAQ;AAC7B,YAAQ,WAAW;AAEnB,UAAM,WAA0B,IAAI,QAAQ,CAAC,KAAK,QAAQ;AACxD,WAAK,QAAQ,KAAK,OAAO,YAAY,CAAC,YAAkC;AACtE,aAAI,mCAAS,WAAU,GAAG;AACxB,cAAI,IAAI;AAAA,QACV;AACA,YAAI;AAAA,UACF,OAAM,mCAAS,UAAS;AAAA,UACxB,SAAS,IAAG,mCAAS,WAAU;AAAA,QACjC,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AACD,UAAM,GAAG,KAAK,KAAK,UAAU,OAAO,CAAC;AACrC,UAAM,UAAyB,IAAI,QAAQ,CAAC,KAAK,QAAQ;AACvD,iBAAW,MAAM;AACf,YAAI;AAAA,UACF,MAAM;AAAA,UACN,SAAS,GAAG;AAAA,QACd,CAAC;AAAA,MACH,GAAG,UAAU;AAAA,IACf,CAAC;AACD,WAAO,QAAQ,KAAK,CAAC,UAAU,OAAO,CAAC;AAAA,EACzC;AAAA,EAEA,aAAa,OAAe,YAAqC;AAC/D,QAAI,KAAK,MAAM,QAAQ,OAAO,qBAAqB,GAAG;AACpD,aAAO;AAAA,IACT;AACA,WAAO,KAAK,MAAM,QAAQ,OAAO,UAAU;AAAA,EAC7C;AAAA,EAEA,MAAM,cAAc;AAClB,QAAI,IAAI;AACR,WAAO,KAAK,MAAM,QAAQ,WAAW,WAAW;AAC9C,YAAM,MAAM,GAAG;AACf,UAAI,EAAE,IAAI,IAAI;AACZ,cAAM,IAAI,MAAM,2BAA2B;AAAA,MAC7C;AAAA,IACF;AACA,QAAI,KAAK,MAAM,QAAQ,WAAW,UAAU;AAC1C;AAAA,IACF;AACA,SAAK,MAAM,QAAQ,SAAS;AAE5B,UAAM,KAAK,QAAQ,WAAW;AAC9B,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa,MAAM,KAAK,QAAQ;AAAA,QACnC,KAAK,kBAAkB,KAAK,IAAI;AAAA,MAClC;AACA,WAAK,WAAW,QAAQ,YAAY,MAAM;AACxC,aAAK,MAAM,QAAQ,SAAS;AAAA,MAC9B,CAAC;AACD,WAAK,WAAW,QAAQ,YAAY,MAAM;AACxC,aAAK,MAAM,QAAQ,SAAS;AAAA,MAC9B,CAAC;AAAA,IACH;AACA,SAAK,MAAM,QAAQ,SAAS;AAC5B;AAAA,EACF;AAAA,EAEA,MAAM,YAAY;AAChB,QAAI,KAAK,MAAM,QAAQ,WAAW,UAAU;AAC1C,YAAM,KAAK,YAAY;AAAA,IACzB;AACA,QAAI,KAAK,MAAM,QAAQ,WAAW,UAAU;AAC1C,aAAO,KAAK;AAAA,IACd;AACA,UAAM,IAAI,MAAM,sBAAsB;AAAA,EACxC;AAAA,EAEA,kBAAkB,SAAwC;AACxD,QAAI,OAAO,YAAY,UAAU;AAC/B,WAAK,EAAE,KAAK;AAAA,QACV,KAAK;AAAA,QACL,KAAK;AAAA,MACP,CAAC;AACD,WAAK,QAAQ,KAAK,WAAW,OAAO;AAAA,IACtC,OAAO;AACL,WAAK,EAAE,KAAK;AAAA,QACV,KAAK;AAAA,QACL,GAAG;AAAA,MACL,CAAC;AACD,UAAI,mCAAS,UAAU;AACrB,aAAK,QAAQ,KAAK,OAAO,QAAQ,YAAY,OAAO;AAAA,MACtD;AACA,WAAI,mCAAS,WAAS,mCAAS,SAAQ,GAAG;AACxC,aAAK,QAAQ,KAAK,OAAO,OAAO;AAAA,MAClC;AACA,UAAI,mCAAS,QAAQ;AACnB,aAAK,QAAQ,KAAK,UAAU,QAAQ,UAAU,OAAO;AAAA,MACvD;AAAA,IACF;AACA;AAAA,EACF;AACF;;;AJ5XA,IAAM,SAAS,eAAU,eAAO,MAAM;AACtC,IAAM,MAAM,IAAI,IAAI,gBAAQ,MAAM;AAAA,CAEjC,iBAAkB;AACjB,MAAI;AACF,UAAM,IAAI,KAAK;AACf,WAAO,KAAK,gBAAgB;AAC5B,QAAI,IAAI;AACR,WAAO,KAAK,gBAAgB;AAAA,EAC9B,SAAS,GAAP;AACA,WAAO,MAAM,mCAAmC,CAAC;AACjD,YAAQ,KAAK,CAAC;AAAA,EAChB;AACF,GAAG;AAEH,IAAO,cAAQ,CAAC;","names":["logger","pino","logger","fs","permissions","config","logger","EventEmitter","ewelink","uuidv4"]}